---
import { contentfulClient } from "../../lib/contentful";

import TitleComp from "../../components/blogs_components/titleComp.astro";
import Comp2Content from "../../components/blogs_components/comp2_content.astro";
import Comp3Black from "../../components/blogs_components/comp3_black.astro";
import ContactUsNow from "../../components/ContactUsNow.astro";

import Layout from "../../layouts/Layout.astro";

import { documentToHtmlString } from "@contentful/rich-text-html-renderer";

export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<any>({
    content_type: "blogs",
  });

  const pages = entries.items.map((item) => {
    const newSlug = (item.fields.params as string).replace(/\n/g, "");

    return {
      params: { slug: newSlug },
      props: {
        blogsData: item,
      },
    };
  });
  return pages;
}
const formatDate = (date) => {
  const inputDate = new Date(date);
  const dateFormatter = new Intl.DateTimeFormat("en-US", {
    year: "numeric",
    month: "short",
    day: "numeric",
  });

  const formattedDate = dateFormatter.format(inputDate);

  return formattedDate;
};

const entries: any = await contentfulClient.getEntries<any>({
  content_type: "caseStudy",
});
const { blogsData } = Astro.props as any;
const caseStudies = blogsData?.fields?.relatedCaseStudies;
---

<Layout
  title={blogsData?.fields?.metaTitle
    ? (blogsData?.fields?.metaTitle as string)
    : "Blog"}
  seoTitle={blogsData.fields.params as string}
  schema={blogsData.fields.schema}
  description={blogsData?.fields?.description
    ? (blogsData?.fields?.description as string)
    : "Blog"}
>
  <TitleComp
    blogTitle={documentToHtmlString(blogsData.fields.blogTitle as any)}
    genre={blogsData.fields.genreNew}
    author={documentToHtmlString(blogsData.fields.author as any)}
    readTime={documentToHtmlString(blogsData.fields.readTime as any)}
    heroImage={blogsData.fields?.heroImage?.fields?.file.url}
    heroImageAlt={blogsData.fields?.heroImage?.fields?.description}
    updatedAt={formatDate(blogsData.sys?.updatedAt as any)}
  />

  <Comp2Content
    quote={documentToHtmlString(blogsData.fields.quote as any)}
    quoter={documentToHtmlString(blogsData.fields.quoter as any)}
    content1Heading={blogsData.fields.content1heading &&
      documentToHtmlString(blogsData.fields.content1heading as any)}
    content1Text={documentToHtmlString(blogsData.fields.content1text as any)}
    content2Heading={documentToHtmlString(
      blogsData.fields.content2heading as any,
    )}
    content2Text={documentToHtmlString(blogsData.fields.content2text as any)}
    content2Img={blogsData.fields?.content2img &&
      blogsData.fields?.content2img?.fields?.file.url}
    content2ImgAlt={blogsData.fields?.content2img &&
      blogsData.fields?.content2img?.fields?.description}
    content2bHeading={blogsData.fields.content2bHeading}
    content2bText={documentToHtmlString(blogsData.fields.content2bText as any)}
    content2bImg={blogsData.fields?.content2bImage &&
      blogsData.fields?.content2bImage?.fields?.file.url}
    content2bImgAlt={blogsData.fields?.content2bImage &&
      blogsData.fields?.content2bImage?.fields?.description}
    content2cHeading={documentToHtmlString(
      blogsData.fields.content2cHeading as any,
    )}
    content2cText={documentToHtmlString(blogsData.fields.content2cText as any)}
    content2cImg={blogsData.fields?.content2cImg &&
      blogsData.fields?.content2cImg?.fields?.file.url}
    content2cImgAlt={blogsData.fields?.content2cImg &&
      blogsData.fields?.content2cImg?.fields?.description}
    content2dHeading={documentToHtmlString(
      blogsData.fields.content2dHeading as any,
    )}
    content2dText={documentToHtmlString(blogsData.fields.content2dText as any)}
    content2dImg={blogsData.fields?.content2dImg &&
      blogsData.fields?.content2dImg?.fields?.file.url}
    content2dImgAlt={blogsData.fields?.content2dImg &&
      blogsData.fields?.content2dImg?.fields?.description}
    content3Heading={documentToHtmlString(
      blogsData.fields.content3heading as any,
    )}
    content3Text={documentToHtmlString(blogsData.fields.content3text as any)}
    content3bHeading={documentToHtmlString(
      blogsData.fields.content3bHeading as any,
    )}
    content3bText={documentToHtmlString(blogsData.fields.content3bText as any)}
    content3bImg={blogsData.fields?.content3bImg &&
      blogsData.fields?.content3bImg?.fields?.file.url}
    content3bImgAlt={blogsData.fields?.content3bImg &&
      blogsData.fields?.content3bImg?.fields?.description}
    content3cHeading={documentToHtmlString(
      blogsData.fields.content3cHeading as any,
    )}
    content3cText={documentToHtmlString(blogsData.fields.content3cText as any)}
    index1={documentToHtmlString(blogsData.fields.index1 as any)}
    index2={documentToHtmlString(blogsData.fields.index2 as any)}
    index3={documentToHtmlString(blogsData.fields.index3 as any)}
    index4={documentToHtmlString(blogsData.fields.index4 as any)}
    index5={documentToHtmlString(blogsData.fields.index5 as any)}
    aboutAuthorName={blogsData.fields.aboutAuthorName}
    aboutAuthorDsgn={blogsData.fields.aboutAuthorDsgn}
  />

  {caseStudies && 
  <Comp3Black caseStudies={caseStudies} />
  }
  <ContactUsNow />
</Layout>

<style is:global>
  .logoWhite {
    display: block !important;
  }
  .logoBlack {
    display: none;
  }

  .turnBlack {
    background: #1a1a1a !important;
    position: absolute;
    width: 100%;
    margin-bottom: 1%;
  }

  .list ul li a {
    color: white !important;
    opacity: 50%;
  }
  path {
    fill: white !important;
  }

  .connect,
  .circles {
    fill: #1a1a1a !important;
  }
  .oval {
    fill: white !important;
  }

  .tele {
    fill: white !important;
  }
  .menu p {
    color: white !important;
  }
  .menu .s1,
  .menu .s2 {
    border: 1px solid white !important;
  }

  u {
    font-family: "Deutschlander";
    text-transform: uppercase;
    font-size: 2.6vw;
    font-weight: 400;
    font-style: normal;
    /* color: white; */
    line-height: 0.85;

    color: black;
  }
</style>
